const messages = [
  { 
    text: "Happy birthday ch·ªã g√°i üéÇ\n Th√™m m·ªôt tu·ªïi m·ªõi, em ch√∫c ch·ªã lu√¥n kh·ªèe m·∫°nh, t∆∞∆°i t·∫Øn v√† gi·ªØ ƒë∆∞·ª£c n·ª• c∆∞·ªùi r·∫°ng r·ª° nh∆∞ ch√≠nh phong c√°ch c·ªßa ch·ªã.", 
    bg: "Picture/pic1.png" 
  },
  { 
    text: "Hy v·ªçng trong nƒÉm nay, ch·ªã s·∫Ω g·∫∑p nhi·ªÅu may m·∫Øn, th√†nh c√¥ng trong c√¥ng vi·ªác v√† m·ªói ng√†y ƒë·ªÅu c√≥ m·ªôt ƒëi·ªÅu nh·ªè xinh khi·∫øn ch·ªã m·ªâm c∆∞·ªùi. üòÑ", 
    bg: "Picture/pic2.png"
  },
  { 
    text: "Em lu√¥n tr√¢n tr·ªçng nh·ªØng cu·ªôc tr√≤ chuy·ªán c·ªßa hai ch·ªã em. Nh·ªù c√≥ ch·ªã m√† em th·∫•y l√≤ng nh·∫π h∆°n, v√† c≈©ng h·ªçc ƒë∆∞·ª£c c√°ch nh√¨n m·ªçi chuy·ªán b√¨nh th·∫£n h∆°n. ‚ù§Ô∏è", 
    bg: "Picture/pic3.png"
  },
  { 
    text: "Mong r·∫±ng nh·ªØng ∆∞·ªõc mu·ªën c·ªßa ch·ªã s·∫Ω d·∫ßn th√†nh hi·ªán th·ª±c. Ch√∫c ch·ªã m·ªói ng√†y tr√¥i qua ƒë·ªÅu l√† m·ªôt trang s√°ch ƒë·∫πp: an nhi√™n, vui v·∫ª v√† ƒë·∫ßy nƒÉng l∆∞·ª£ng t√≠ch c·ª±c.\n Sinh nh·∫≠t th·∫≠t tr·ªçn v·∫πn v√† ·∫•m √°p nha ch·ªã ü•≥", 
    bg: "Picture/pic4.png"
  }
];



let currentIndex = 0;
let typingTimeout;

// const correctUser = "1"; 
const correctPass = "02092002"; // m·∫≠t m√£ ƒëƒÉng nh·∫≠p
let enteredPass = "";

// H√†m b·∫•m s·ªë
function pressNum(num) {
    enteredPass += num;
    document.getElementById("pinBox").value = enteredPass;
}

// H√†m x√≥a 1 s·ªë
function deleteNum() {
    enteredPass = enteredPass.slice(0, -1);
    document.getElementById("pinBox").value = enteredPass;
}

// H√†m login
function checkLogin() {
    if (enteredPass === correctPass) {
        document.getElementById("login").classList.add("hidden");
        document.body.style.backgroundImage = `url('${messages[0].bg}')`;
        document.getElementById("messages").classList.remove("hidden");
        typeMessage(messages[0].text);
        // üîä Ph√°t nh·∫°c khi login th√†nh c√¥ng
        const audio = document.getElementById("bgm");
        audio.play().catch(err => {
            console.log("Autoplay b·ªã ch·∫∑n:", err);
        });
    } else {
        document.getElementById("loginError").innerText = "Aww, m·∫≠t kh·∫©u b·ªã sai r√πii. Zui l√≤ng nh·∫≠p l·∫°i nghennn!";
        // üî• Reset m·∫≠t kh·∫©u nh·∫≠p sai
        enteredPass = "";
        document.getElementById("pinBox").value = "";
    }
}

function typeMessage(text) {
    const msgEl = document.getElementById("messageText");
    msgEl.innerHTML = "";

    const lines = text.split("\n"); // t√°ch theo xu·ªëng d√≤ng
    lines.forEach((line, i) => {
        const p = document.createElement("p");
        p.textContent = line;
        p.style.opacity = 0;
        p.style.transform = "translateY(15px)";
        p.style.transition = "opacity 1.2s ease, transform 1.2s ease";
        msgEl.appendChild(p);

        setTimeout(() => {
            p.style.opacity = 1;
            p.style.transform = "translateY(0)";
        }, i * 500); // m·ªói d√≤ng xu·∫•t hi·ªán sau 0.5s
    });
}


function showSticker(url) {
    const stickerEl = document.getElementById("sticker");
    if(url){
        stickerEl.src = url;
        stickerEl.classList.remove("hidden");
    } else {
        stickerEl.classList.add("hidden");
    }
}

function nextMessage() {
    if(currentIndex < messages.length - 1){
        currentIndex++;
        document.body.style.backgroundImage = `url('${messages[currentIndex].bg}')`;
        typeMessage(messages[currentIndex].text);
        showSticker(messages[currentIndex].sticker);
    } else {
        startCelebration();
    }
}

function prevMessage() {
    if(currentIndex > 0){
        currentIndex--;
        document.body.style.backgroundImage = `url('${messages[currentIndex].bg}')`;
        typeMessage(messages[currentIndex].text);
        showSticker(messages[currentIndex].sticker);
    }
}

function startCelebration() {
    document.getElementById("messages").classList.add("hidden");
    document.getElementById("fireworksCanvas").classList.remove("hidden");
    document.getElementById("balloonsCanvas").classList.remove("hidden");
    document.getElementById("finalText").classList.remove("hidden");
    document.getElementById("cake").classList.remove("hidden");

    const duration = 4000;
    const end = Date.now() + duration;
    (function frame() {
        confetti({ particleCount: 7, spread: 70, origin: { y: 0.6 } });
        if (Date.now() < end) requestAnimationFrame(frame);
    })();

    // B√≥ng bay
    const ctx = document.getElementById("balloonsCanvas").getContext("2d");
    let balloons = Array.from({ length: 20 }, () => ({
        x: Math.random()*window.innerWidth,
        y: window.innerHeight + Math.random()*500,
        color: `hsl(${Math.random()*360}, 100%, 50%)`,
        size: 30 + Math.random()*20,
        speed: 3 + Math.random()*2
    }));
    function drawBalloons() {
        ctx.clearRect(0,0,window.innerWidth,window.innerHeight);
        balloons.forEach(b => {
            ctx.beginPath();
            ctx.arc(b.x, b.y, b.size, 0, Math.PI*2);
            ctx.fillStyle = b.color;
            ctx.fill();
            b.y -= b.speed;
            if(b.y < -50) b.y = window.innerHeight + 50;
        });
        requestAnimationFrame(drawBalloons);
    }
    drawBalloons();
}

function drawFirework(ctx, x, y, colors) {
    const particles = 30;
    for (let i = 0; i < particles; i++) {
        const angle = (2 * Math.PI * i) / particles;
        const length = 80 + Math.random() * 40;
        ctx.beginPath();
        ctx.moveTo(x, y);
        ctx.lineTo(x + Math.cos(angle) * length, y + Math.sin(angle) * length);
        ctx.strokeStyle = colors[i % colors.length];
        ctx.lineWidth = 3 + Math.random() * 2;
        ctx.stroke();
    }
}

function fireworksAroundCake() {
    const canvas = document.getElementById("fireworksCanvas");
    canvas.width = window.innerWidth;
    canvas.height = window.innerHeight;
    const ctx = canvas.getContext("2d");

    // V·ªã tr√≠ quanh b√°nh (gi·∫£ s·ª≠ b√°nh ·ªü gi·ªØa m√†n h√¨nh)
    const cake = document.getElementById('cakeWrapper');
    const rect = cake.getBoundingClientRect();
    const cx = rect.left + rect.width / 2;
    const cy = rect.top + rect.height / 2;

    // C√°c v·ªã tr√≠ ph√°o hoa quanh b√°nh
    const positions = [
        [cx - 120, cy - 80],
        [cx + 120, cy - 80],
        [cx - 120, cy + 80],
        [cx + 120, cy + 80]
    ];
    const colors = ['#ffb3d9', '#ffd700', '#8e24aa', '#2196f3', '#fff200', '#ff1744'];

    ctx.clearRect(0, 0, canvas.width, canvas.height);

    positions.forEach(([x, y]) => {
        drawFirework(ctx, x, y, colors);
    });

    // Hi·ªáu ·ª©ng m·ªù d·∫ßn
    setTimeout(() => {
        ctx.clearRect(0, 0, canvas.width, canvas.height);
    }, 1800);
}

// G·ªçi h√†m n√†y khi hi·ªán b√°nh sinh nh·∫≠t
function showCake() {
    document.getElementById('cakeWrapper').classList.remove('hidden');
    document.getElementById('flame2').classList.remove('flame-off');
    document.getElementById('flame3').classList.remove('flame-off');
    document.getElementById("fireworksCanvas").classList.remove("hidden");
    fireworksAroundCake(); // B·∫Øn ph√°o hoa quanh b√°nh
    setTimeout(() => {
        document.getElementById('flame2').classList.add('flame-off');
        document.getElementById('flame3').classList.add('flame-off');
        document.getElementById("fireworksCanvas").classList.add("hidden");
    }, 5000);
}

window.addEventListener("load", function () {
    const music = document.getElementById("music");
    music.play().catch(err => {
        console.log("‚ö†Ô∏è Tr√¨nh duy·ªát ch·∫∑n autoplay:", err);
    });
});
